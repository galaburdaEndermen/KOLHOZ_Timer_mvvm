<Window x:Class="GAS_timer_mvvm.Settings"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GAS_timer_mvvm"
        mc:Ignorable="d"
        Title="Settings" Height="450" Width="800">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="450*"/>
            <RowDefinition Height="110*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="100*"/>
            <ColumnDefinition Width="650*"/>
            <ColumnDefinition Width="100*"/>
        </Grid.ColumnDefinitions>
        
        <Grid.Resources>
            <Image x:Key="Add" Source="pack://application:,,,/Resourses\Add.png"/>
            <!--<Image x:Key="Del" Source="pack://application:,,,/Resourses\Del.png"/>-->
            <!--<Image x:Key="Down" Source="pack://application:,,,/Resourses\Down.png"/>
            <Image x:Key="Up" Source="pack://application:,,,/Resourses\Up.png"/>-->
            <Image x:Key="Save" Source="pack://application:,,,/Resourses\Save.png"/>


            <DataTemplate x:Key="Del">
                <Image Source="pack://application:,,,/Resourses\Del.png" />
            </DataTemplate>

            <DataTemplate x:Key="Down">
                <Image Source="pack://application:,,,/Resourses\Down.png" />
            </DataTemplate>

            <DataTemplate x:Key="Up">
                <Image Source="pack://application:,,,/Resourses\Up.png" />
            </DataTemplate>



            <Style x:Key="SaveButton" TargetType="Button">
            <Setter Property="Background" Value="LightGray"></Setter>
            <Setter Property="Height" Value="70"></Setter>
            <Setter Property="Width" Value="70"></Setter>
            <Setter Property="HorizontalAlignment" Value="Right"></Setter>
            <Setter Property="VerticalAlignment" Value="Bottom"></Setter>
            <Setter Property="Margin" Value="5"></Setter>
            <Setter Property="BorderBrush" Value="Gray"></Setter>
            <Setter Property="Opacity" Value="0.9"></Setter>

            <Setter Property="Template">
                <Setter.Value>

                    <ControlTemplate TargetType="Button">

                            <Border 
                                Name = "Brd" 
                                CornerRadius="5"
                                Background="{TemplateBinding Background}">
                                <ContentPresenter
                                    Margin="5"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
                                </ContentPresenter>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="False">
                                    <Setter Property="Opacity" Value="0.8"></Setter>
                                    <Setter Property="Margin" Value="8"></Setter>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Opacity" Value="1.0"></Setter>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">

                                </Trigger>
                            </ControlTemplate.Triggers>

                        </ControlTemplate>

                </Setter.Value>
            </Setter>
            </Style>

            <Style x:Key="ControllButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="LightGray"></Setter>
                <Setter Property="BorderBrush" Value="Gray"></Setter>
                <Setter Property="Opacity" Value="0.9"></Setter>

                <Setter Property="Template">
                    <Setter.Value>

                        <ControlTemplate TargetType="Button">

                            <Border 
                                Name = "Brd" 
                               
                                Background="{TemplateBinding Background}">
                                <ContentPresenter
                                    Margin="5"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
                                </ContentPresenter>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="False">
                                    <Setter Property="Opacity" Value="0.8"></Setter>
                                    
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Opacity" Value="1.0"></Setter>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">

                                </Trigger>
                            </ControlTemplate.Triggers>

                        </ControlTemplate>

                    </Setter.Value>
                </Setter>

            </Style>

            <Style x:Key="SaveText" TargetType="TextBlock">
                <Setter Property="FontSize" Value="15"></Setter>
                <Setter Property="FontFamily" Value="Courier New"></Setter>
                <Setter Property="FontWeight" Value="Bold"></Setter>
                <Setter Property="TextAlignment" Value="Center"></Setter>
                
            </Style>

            <Style x:Key="SaveTextBox" TargetType="TextBox">
                <Setter Property="FontSize" Value="15"></Setter>
                <Setter Property="BorderBrush" Value="White"></Setter>
                <Setter Property="FontFamily" Value="Courier New"></Setter>
                <Setter Property="FontWeight" Value="Bold"></Setter>
                <Setter Property="TextAlignment" Value="Center"></Setter>
            </Style>



        </Grid.Resources>

        <ListBox Grid.Column="1" Grid.Row="0" ItemsSource="{Binding Timers}" BorderBrush="White" HorizontalContentAlignment="Stretch">
            <!--стіль, шоб не виділялось при наведенні-->
            <ListBox.ItemContainerStyle>
                <Style  TargetType="{x:Type ListBoxItem}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                    <Setter Property="Padding" Value="2,0,0,0"/>
                    <Setter Property="FocusVisualStyle">
                        <Setter.Value>
                            <Style>
                                <!-- This removes focus visualization -->
                                <Setter Property="Control.Template" Value="{x:Null}"/>
                            </Style>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                    <!-- Some default triggers removed to avoid background changes on selection -->
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>

            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical"/>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>

            <ListBox.ItemTemplate>
                <DataTemplate >
                    <Grid Margin="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="50">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="100*"/>
                            <RowDefinition Height="100*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50*"/>
                            <ColumnDefinition Width="200*"/>
                            <ColumnDefinition Width="200*"/>
                            <ColumnDefinition Width="50*"/>
                        </Grid.ColumnDefinitions>


                        <Button Grid.Column="0" Grid.Row="0" Style="{StaticResource ControllButtonStyle}" 
                                Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}, AncestorLevel=2},Path=DataContext.MoveUp}" CommandParameter="{Binding Name}"
                                ContentTemplate ="{StaticResource Up}"></Button>
                        <Button Grid.Column="0" Grid.Row="1" Style="{StaticResource ControllButtonStyle}" 
                                Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}, AncestorLevel=2},Path=DataContext.MoveDown}" CommandParameter="{Binding Name}" 
                                ContentTemplate ="{StaticResource Down}"></Button>

                        <!--<TextBlock Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Style="{StaticResource SaveText}" Text="{Binding Name}"></TextBlock>
                        <TextBlock Grid.Column="2" Grid.Row="0" Grid.RowSpan="2" Style="{StaticResource SaveText}" Text="{Binding Time}"></TextBlock>-->

                        <TextBox Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Style="{StaticResource SaveTextBox}" Text="{Binding Name, Mode=TwoWay}"></TextBox>
                        <TextBlock Grid.Column="2" Grid.Row="0" Grid.RowSpan="2" Style="{StaticResource SaveText}" Text="{Binding Time}"></TextBlock>

                        <Button Grid.Column="3" Grid.Row="0" Grid.RowSpan="2" Style="{StaticResource ControllButtonStyle}" 
                                Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Grid}, AncestorLevel=2},Path=DataContext.Delete}"  CommandParameter="{Binding Name}"
                                ContentTemplate ="{StaticResource Del}" ></Button>

                       

                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>

        </ListBox>

        <Button Grid.Column="1" Grid.Row="1" Style="{StaticResource ControllButtonStyle}" Margin="5" Command="{Binding AddSave}" Content="{StaticResource Add}"></Button>
        <Button Grid.Column="2" Grid.Row="1" Style="{StaticResource SaveButton}" Margin="5" Command="{Binding SaveAll}" Content="{StaticResource Save}"></Button>
    </Grid>
</Window>
